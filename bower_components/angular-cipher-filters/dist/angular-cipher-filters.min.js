/**
 * @name angular-cipher-filters
 * @description A collection of common ciphers implemented as angular filers
 * @version v0.1.0 - Released on 2015-03-01
 * @author Zsolt Szalai
 * @license MIT
 * @link 'https://github.com/zsoltiii/angular-cipher-filters'
**/

"use strict";angular.module("zsoltiii.angular-cipher-filters",[]),angular.module("zsoltiii.angular-cipher-filters").constant("alphabetsDefinitions",{ISOBasicLatinLowercase:"abcdefghijklmnopqrstuvwxyz",ISOBasicLatinUppercase:"ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),angular.module("zsoltiii.angular-cipher-filters").filter("caesarCipher",["alphabetsDefinitions",function(a){return function(b,c,d){if(angular.isUndefined(b))return null;angular.isUndefined(c)&&(c=0),angular.isUndefined(d)&&(d=[],d.push(a.ISOBasicLatinLowercase,a.ISOBasicLatinUppercase));var e=b,f=function(a,b,c){for(var d="",e=0;e<a.length;e++){var f=c.indexOf(a.charAt(e));d+=f>=0?c.charAt(b>=0?(f+b)%c.length:(c.length+f+b)%c.length):a.charAt(e)}return d};return angular.forEach(d,function(a){e=f(e,c,a)}),e}}]),angular.module("zsoltiii.angular-cipher-filters").filter("rot1",["caesarCipherFilter",function(a){return function(b,c){var d;return d="boolean"==typeof c&&c===!0?-1:1,a(b,d)}}]),angular.module("zsoltiii.angular-cipher-filters").filter("rot13",["caesarCipherFilter",function(a){return function(b,c){var d;return d="boolean"==typeof c&&c===!0?-13:13,a(b,d)}}]),angular.module("zsoltiii.angular-cipher-filters").filter("vigenereCipher",["caesarCipherFilter","alphabetsDefinitions",function(a,b){return function(c,d,e,f){if(angular.isUndefined(c))return null;if(angular.isUndefined(d))return c;angular.isUndefined(f)&&(f=[],f.push(b.ISOBasicLatinLowercase,b.ISOBasicLatinUppercase));for(var g=0,h="",i=0;i<c.length;i++)if(angular.equals(c.charAt(i)," "))h+=c.charAt(i);else{var j=b.ISOBasicLatinLowercase.indexOf(d.charAt(g%d.length).toLowerCase());h+=j>=0?e===!0?a(c.charAt(i),-j,f):a(c.charAt(i),j,f):c.charAt(i),g++}return h}}]),angular.module("zsoltiii.angular-cipher-filters").filter("scytaleCipher",function(){return function(a,b,c){if(angular.isUndefined(a))return null;angular.isUndefined(b)&&(b=1);var d,e,f=[],g=a.replace(/\s/g,"").toUpperCase(),h=g.length/b,i=g.split("");if(c===!0){for(e=0;b>e;e++)for(d=0;h>d;d++)f.push(i[e+d*b]);return f.join("")}for(d=0;h>d;d++)for(e=0;b>e;e++)f.push(i[d+e*h]);return f.join("")}});